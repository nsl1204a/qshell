<?xml version="1.0"?><phpdoc><class name="PAFOutput" extends="PAFObject" undoc="false" access="public" abstract="true" package="PAF"><file>D:\wwwroot\web\private\class\php\PAF/PAFOutput.php</file><doc><author email="scruz@prisacom.com">Sergio Cruz</author><inherited src="Array"/><overriden src="Array"/><description>Proporciona un interface público compuesto por dos métodos y que debe ser implementado por las clasesderivadas de esta. El interface es el siguiente:1.- getOutput(). Este es el método que realizará las operaciones necesarias para proporcionar la salidafísica.2.- getKey(). Proporciona un identificador único basado en el nombre de la clase más los atributos que identifiquenunívocamente cada objeto instanciado en cada clase derivada. Este identificador único puede serútil para cachear las salidas generadas por cada uno de los objetos.</description><shortdescription>Clase para la implementación de salidas.</shortdescription><version>$Revision: 1.5 $</version></doc><function name="PAFOutput" undoc="false" access="public"><doc><parameter name="$errorClass" default="null" type="string">Nombre de la clase de error asociada a PAFOutput.</parameter><return type="void"/><description/><shortdescription>Constructor.</shortdescription></doc></function><function name="getClassType" undoc="true" access="public"><doc><return name="" type="int">Identificador único de clase.</return><overriden src="PAFObject"/><description/><shortdescription>Método estático para recuperar el identificador de la clase.</shortdescription></doc></function><function name="getClassName" undoc="true" access="public"><doc><return name="" type="string">Nombre de la clase.</return><overriden src="PAFObject"/><description/><shortdescription>Método estático que retorna el nombre de la clase.</shortdescription></doc></function><function name="isTypeOf" undoc="true" access="public"><doc><parameter name="$tipo" type="int">Número entero con el Código de clase por el que queremos preguntar .</parameter><return name="" type="boolean"/><overriden src="PAFObject"/><description>Reimplementado de PAFObject.</description><shortdescription>Método de consulta para determinar si una clase es de un tipo determinado.</shortdescription></doc></function><function name="getOutput" undoc="false" access="public" abstract="true"><doc><return name="" type="mixed">Cadena con el código generado por el Output o un PEAR_Error si se produce algún error&#x0a;durante la ejecución del mismo.</return><description>Este método debe ser sobreescrito en todas las clases que deriven de ella de formaobligatoria y debe contener las operaciones necesarias para que el objeto genere su salida.La salida deberá ser un string con el código generado por el Output o un error.La implementación de este método debe contemplar que la salida se produzca correctamente o no. Para elloel tipo de retorno de la implementación particular de este método deberá ser mixto. En el caso de que lasalida se haya generado correctamente la retornará. En el caso de que se haya detectado algún tipo deerror en su generación se retornará un objeto de error (PEAR_Error o derivada). De este modo el usuariode la clase puede comprobar por medio de PEAR::iserror() el tipo de retorno y actuar en consecuencia.</description><shortdescription>Método virtual puro para la obtención de la salida física.</shortdescription></doc></function><function name="getKey" undoc="false" access="public" abstract="true"><doc><return type="void"/><description>ser utilizado para proporcionar el id necesario de una salida a la hora de cachearla. Normalmente esteidentificador único será el resultado de aplicar una función hash sobre el nombre de la clase derivadamás los datos que identifiquen unívocamente al objeto salida que estemos tratando.</description><shortdescription>Método virtual puro para proporcionar un identificador único de cada objeto salida. Esto suele</shortdescription></doc></function><constant name="CLASS_PAFOUTPUT" undoc="false" access="private" case="default: case sensitive">8<doc><description/><shortdescription/></doc></constant><inherited src="PAFObject" type="functions"><element>pafobject</element></inherited><inherited src="PAFObject" type="consts"><element>class_pafobject</element></inherited><path><parent>PAFObject</parent></path><baseclass>PAFObject</baseclass><subclasses><subclass>PAFBanner</subclass><subclass>PAFPage</subclass><subclass>genresOU</subclass></subclasses></class></phpdoc>