<?xml version="1.0"?><phpdoc><class name="PAFSession" extends="PAFObject" undoc="false" access="public" package="PAF"><file>D:\wwwroot\web\private\class\php\PAF/PAFSession.php</file><doc><author email="scruz@prisacom.com">Sergio Cruz</author><inherited src="Array"/><overriden src="Array"/><description/><shortdescription>Clase para el manejo de sesiones.</shortdescription><version>$Revision: 1.5 $</version></doc><function name="PAFSession" undoc="false" access="public"><doc><parameter name="$pathSession" type="string">Path completo donde se almacena la sesión.</parameter><parameter name="$nameCookie" type="string">Nombre de la cookie asociada a la sesión.</parameter><parameter name="$domainCookie" type="string">Dominio de la cookie asociada a la sesión.</parameter><parameter name="$pathCookie" type="string">Path dentro del dominio anterior.</parameter><parameter name="$cookieLifeTime" type="int">Tiempo de vida (en segundos) de la cookie asociada la sesión.</parameter><parameter name="$typeCache" default="&amp;quot;nocache&amp;quot;" type="string">Especifica el tipo de caché que se aplicará en el cliente.&#x0a;Por defecto toma el valor &amp;quot;nocache&amp;quot; que implica que no se realizará ningún tipo&#x0a;de caché en la parte cliente. Otros valores que puede tomar este parámetro son&#x0a;&amp;quot;public&amp;quot; y &amp;quot;private&amp;quot;. Ver la ayuda de session_cache_limiter en www.php,net para&#x0a;obtener más información al respecto.</parameter><parameter name="$errorClass" default="null" type="string">Nombre de la clase de error asociada a PAFSession.</parameter><return type="void"/><description/><shortdescription>Constructor</shortdescription></doc></function><function name="getClassType" undoc="true" access="public"><doc><return name="" type="int">Identificador único de clase.</return><overriden src="PAFObject"/><description/><shortdescription>Método estático para recuperar el identificador de la clase.</shortdescription></doc></function><function name="getClassName" undoc="true" access="public"><doc><return name="" type="string">Nombre de la clase.</return><overriden src="PAFObject"/><description/><shortdescription>Método estático que retorna el nombre de la clase.</shortdescription></doc></function><function name="isTypeOf" undoc="true" access="public"><doc><parameter name="$tipo" type="int">Número entero con el Código de clase por el que queremos preguntar .</parameter><return name="" type="boolean"/><overriden src="PAFObject"/><description>Reimplementado de PAFObject.</description><shortdescription>Método de consulta para determinar si una clase es de un tipo determinado.</shortdescription></doc></function><function name="getSessionId" undoc="false" access="public"><doc><return name="" type="int"/><description/><shortdescription>Recupera el valor del identificador de Sesión.</shortdescription></doc></function><function name="getCookieName" undoc="false" access="public"><doc><return name="" type="string"/><description/><shortdescription>Recupera el nombre de la cookie asociada a la sesión actual.</shortdescription></doc></function><function name="getCookieDomain" undoc="false" access="public"><doc><return name="" type="string"/><description/><shortdescription>Recupera el dominio de la cookie asociada a la sesión actual.</shortdescription></doc></function><function name="getCookiePath" undoc="false" access="public"><doc><return name="" type="string"/><description/><shortdescription>Recupera el path dentro del dominio para la cookie asociada a la sesión actual.</shortdescription></doc></function><function name="getCookieLifeTime" undoc="false" access="public"><doc><return name="" type="int"/><description/><shortdescription>Recupera el tiempo de expiración de la cookie asociada a la sesión actual.</shortdescription></doc></function><function name="getTypeCache" undoc="false" access="public"><doc><return name="" type="string"/><description/><shortdescription>Recupera el tipo de caché aplicada al cliente para la sesión</shortdescription></doc></function><function name="getPathSession" undoc="false" access="public"><doc><return name="" type="string"/><description/><shortdescription>Recupera el Path donde se encuentra el fichero de la sesión actual.</shortdescription></doc></function><function name="sessionStart" undoc="false" access="public"><doc><return name="" type="mixed">TRUE si se ha conseguido crear o recuperar la sesión o un error&#x0a;en caso contrario.</return><description>con los parámetros especificados por construcción.TO-DO: Una posible opción es que se contemple la posibilidad de si no existe la sesión que no la creey redirija a algún sitio...</description><shortdescription>Método para iniciar una sesión. Si la sesión existe la utiliza y en caso contrario la crea</shortdescription></doc></function><function name="sessionRegister" undoc="false" access="public"><doc><parameter name="$value" type="string">Nombre de la variable, array u objeto que&#x0a;queremos registrar en la sesión.</parameter><return name="" type="mixed">true si la variable, array u objeto se ha registrado correctamente dentro de la&#x0a;sesión o un error en caso contrario.</return><description>Es posible registrar variables simples, arrays u objetos.</description><shortdescription>Método para registrar una variable dentro de la sesión.</shortdescription></doc></function><function name="sessionUnregister" undoc="false" access="public"><doc><parameter name="$value" type="string">Nombre de la variable, array u objeto que&#x0a;queremos registrar en la sesión.</parameter><return name="" type="mixed">true si la variable, array u objeto se ha registrado correctamente dentro de la&#x0a;sesión o un error en caso contrario.</return><description>lo mismo.</description><shortdescription>Elimina la variable indicada de la sesión. También elimina la variable global asociada a</shortdescription></doc></function><function name="sessionClear" undoc="false" access="public"><doc><return type="void"/><description>Las variables que se encuentren registradas en ese momento siguen estando registradas.</description><shortdescription>Elimina todos los datos que se encuentren registrados en la sesión actual.</shortdescription></doc></function><function name="sessionDestroy" undoc="false" access="public"><doc><return name="" type="mixed">true si se ha conseguido eliminar completamente la sesión o un error&#x0a;en caso contrario.</return><description>variables globales utilizadas. También elimina el fichero físico donde se mantienen los datosde la sesión actual.</description><shortdescription>Elimina la sesión completamente. Esto es, Elimina los datos de sesión y hace un &amp;quot;unset&amp;quot; de las</shortdescription></doc></function><function name="isRegistered" undoc="false" access="private"><doc><parameter name="$value" undoc="true"/><return name="" type="boolean"/><description>en la sesión actual.@acces public.</description><shortdescription>Método para comprobar si una determinada variable, array u objeto se encuentra registrado</shortdescription></doc></function><function name="&amp;getRegisteredValue" undoc="false" access="public"><doc><parameter name="$value" undoc="true"/><return name="" type="mixed">Referencia a la variable, array u objeto almacenado en la sesión o un error&#x0a;si el objeto no se encuentra registrado en la sesión.</return><description>unmayor control sobre las varibles de sesión que recuperamos que si accediéramosdirectamente a la variable global.</description><shortdescription>Recupera una variable, array u objeto almacenado en la sesión actual. Proporciona</shortdescription></doc></function><variable name="$id" access="private" type="string"><doc><description/><shortdescription>Atributo para almacenar el identificador de sesión.</shortdescription></doc></variable><variable name="$pathSession" access="private" type="string"><doc><description/><shortdescription>Ruta donde se almacenará el fichero de sesión.</shortdescription></doc></variable><variable name="$nameCookie" access="private" type="string"><doc><description/><shortdescription>Nombre de la cookie asociada con la sesión actual.</shortdescription></doc></variable><variable name="$domainCookie" access="private" type="string"><doc><description/><shortdescription>Dominio de la cookie asociada con la sesión actual.</shortdescription></doc></variable><variable name="$pathCookie" access="private" type="string"><doc><description/><shortdescription>Path dentro del dominio anterior donde tiene validez la cookie.</shortdescription></doc></variable><variable name="$cookieLifeTime" access="private" type="int"><doc><description/><shortdescription>Tiempo de vida de la cookie dentro del cliente.</shortdescription></doc></variable><variable name="$typeCache" access="private" type="string"><doc><description>Por defecto toma el valor &amp;quot;nocache&amp;quot; que implica que no se realizará ningún tipode caché en la parte cliente. Otros valores que puede tomar este parámetro son&amp;quot;public&amp;quot; y &amp;quot;private&amp;quot;. Ver la ayuda de session_cache_limiter en www.php,net paraobtener más información al respecto.</description><shortdescription>Especifica el tipo de caché que se aplicará en el cliente.</shortdescription></doc></variable><constant name="CLASS_PAFSESSION" undoc="false" access="private" case="default: case sensitive">10<doc><description/><shortdescription/></doc></constant><inherited src="PAFObject" type="functions"><element>pafobject</element></inherited><inherited src="PAFObject" type="consts"><element>class_pafobject</element></inherited><path><parent>PAFObject</parent></path><baseclass>PAFObject</baseclass></class></phpdoc>