<?xml version="1.0"?><phpdoc><class name="PAFPage" extends="PAFOutput" undoc="false" access="private" abstract="true" package="PAF"><file>D:\wwwroot\web\private\class\php\PAF/PAFPage.php</file><doc><author email="scruz@prisacom.com">Sergio Cruz</author><inherited src="Array"/><overriden src="Array"/><description>Se debe derivar de esta clase para la implementación de páginas particulares.Una página se compone de una serie de bloques definidos en su array miembro $blocks. Lasimplementaciones particulares de PAFPage deberán crear este array con sus bloques predeterminados.El contenido de dicho array-hash será un conjunto de Outputs identificados por un id de Bloque de lasiguiente manera:$this-&amp;gt;blocks= array (&amp;quot;A&amp;quot; =&amp;gt; Output1,&amp;quot;B&amp;quot; =&amp;gt; Output2,...)La operación consistente en fijar a un bloque un determinado Output (PAFOutput o derivado) se realizaráhaciendo uso del método setBlock (&amp;lt;nombre_bloque&amp;gt;, &amp;lt;Output_deseado&amp;gt;) que proporciona esta clase al efecto.</description><shortdescription>Clase abstracta para la implementación de páginas HTML.</shortdescription><version>$Revision: 1.1 $</version></doc><function name="PAFPage" undoc="false" access="public"><doc><parameter name="&amp;$configuration" type="object [unknown]">Objeto de tipo PAFConfiguration que contendrá toda la información&#x0a;acerca de variables y fuentes de datos necesarios para la página.</parameter><parameter name="&amp;$anchor" type="object [unknown]">Objeto de tipo PAFAnchor que define el ámbito en el que se muestra la página</parameter><return type="void"/><description/><shortdescription>Constructor.</shortdescription></doc></function><function name="getConfiguration" undoc="false" access="public"><doc><return name="" type="object PAFConfiguration">.</return><description/><shortdescription>Devuelve el objeto PAFConfiguration con los datos necesarios para la ejecución de la página.</shortdescription></doc></function><function name="getAnchor" undoc="false" access="public"><doc><return name="" type="object PAFAnchor"/><description/><shortdescription>Devuelve el objeto PAFAnchor asociado a la página.</shortdescription></doc></function><function name="getBlocks" undoc="false" access="public"><doc><return name="" type="array"/><description/><shortdescription>Devuelve el array de Outputs que contiene la página.</shortdescription></doc></function><function name="getClassName" undoc="true" access="public"><doc><return name="" type="string">Nombre de la clase.</return><overriden src="PAFObject"/><description/><shortdescription>Método estático que retorna el nombre de la clase.</shortdescription></doc></function><function name="setBlock" undoc="false" access="public"><doc><parameter name="$blockName" type="string">Nombre del bloque dentro del array de bloques que tiene la página.</parameter><parameter name="&amp;$output" type="object [unknown]">Objeto de tipo PAFObject o derivado que queremos asociar con el bloque anterior.</parameter><return type="void"/><description>la página especificado.</description><shortdescription>Función para establecer qué output será el que se muestre en el bloque de</shortdescription></doc></function><function name="getOutput" undoc="true" access="public" abstract="true"><doc><return type="void"/><overriden src="PAFOutput"/><description>física. Se debe redefinir para implementar la lógica de construcción para cada tipo depágina que se desee implementar.</description><shortdescription>Método que implementa la lógica de salida para la página y proprorciona la salida</shortdescription></doc></function><function name="getKey" undoc="true" access="public" abstract="true"><doc><return type="void"/><overriden src="PAFOutput"/><description>ser utilizado para proporcionar el id necesario de una salida a la hora de cachearla. Normalmente esteidentificador único será el resultado de aplicar una función hash sobre el nombre de la clase derivadamás los datos que identifiquen unívocamente al objeto salida que estemos tratando.</description><shortdescription>Método virtual puro para proporcionar un identificador único de cada objeto salida. Esto suele</shortdescription></doc></function><variable name="$blocks" access="private" type="array">array()<doc><description/><shortdescription>Colección de bloques que tiene la página</shortdescription></doc></variable><variable name="$anchor" access="private" type="string">null<doc><description/><shortdescription>Ámbito en el que se mostrará la página.</shortdescription></doc></variable><variable name="$configuration" access="private" type="string">null<doc><description/><shortdescription>Conjunto de variables y fuentes de datos necesarios para la ejecución de la página.</shortdescription></doc></variable><variable name="$result" access="private" type="string">&amp;quot;&amp;quot;<doc><description/><shortdescription>Cadena con el resultado final de la página.</shortdescription></doc></variable><inherited src="PAFOutput" type="functions"><element>pafoutput</element><element>getclasstype</element><element>istypeof</element></inherited><inherited src="PAFObject" type="functions"><element>pafobject</element><element>getclasstype</element><element>istypeof</element></inherited><inherited src="PAFOutput" type="consts"><element>class_pafoutput</element></inherited><inherited src="PAFObject" type="consts"><element>class_pafobject</element></inherited><path><parent>PAFOutput</parent><parent>PAFObject</parent></path><baseclass>PAFObject</baseclass></class></phpdoc>